name: Build and Release Tauri + Next.js Desktop App

on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    runs-on: Ubuntu-22.04
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

  build-linux:
    needs: create-release
    runs-on: Ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies (Ubuntu)
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf libglib2.0-dev libssl-dev build-essential curl wget libsoup2.4-dev libjavascriptcoregtk-4.0-dev

      - name: Set PKG_CONFIG_PATH
        run: echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install PNPM
        run: npm install -g pnpm

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Install dependencies
        run: pnpm install

      - name: Add environment variables
        run: pnpm env:linux

      - name: Build application
        run: pnpm build

      - name: Zip Linux artifact
        run: zip -r mate-chess-linux.zip apps/desktop/src-tauri/release/mate-chess

      - name: Upload Linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: mate-chess-linux.zip
          asset_name: mate-chess-linux.zip
          asset_content_type: application/zip

  build-windows:
    needs: create-release
    runs-on: windows-2022
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install PNPM
        run: npm install -g pnpm

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: x86_64-pc-windows-msvc

      - name: Install dependencies
        run: pnpm install

      - name: Add environment variables
        run: pnpm env:windows

      - name: Build application
        run: pnpm build

      - name: Zip Windows artifact
        run: Compress-Archive -Path apps/desktop/src-tauri/release/mate-chess.exe -DestinationPath mate-chess-windows.zip

      - name: Upload Windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: mate-chess-windows.zip
          asset_name: mate-chess-windows.zip
          asset_content_type: application/zip

  build-macos:
    needs: create-release
    runs-on: macOS-12
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install PNPM
        run: npm install -g pnpm

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: x86_64-apple-darwin

      - name: Install dependencies
        run: pnpm install

      - name: Add environment variables
        run: pnpm env:mac

      - name: Build application
        run: pnpm build

      - name: Zip macOS artifact
        run: zip -r mate-chess-macos.zip apps/desktop/src-tauri/release/mate-chess.app

      - name: Upload macOS artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: mate-chess-macos.zip
          asset_name: mate-chess-macos.zip
          asset_content_type: application/zip
